// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model User {
  user_id        Int       @id @default(autoincrement())
  username       String    @unique
  email          String?   @unique
  password_hash  String?
  public_address String    @unique
  nonce          String
  role           String    @default("model_owner")
  created_at     DateTime  @default(now())
  updated_at     DateTime  @updatedAt

  models            AI_Model[]
  contributedModels Model_Contributor[]
}

model AI_Model {
  model_id          Int      @id @default(autoincrement())
  user_id           Int
  model_name        String
  description       String?
  version           String?
  training_data_info String?
  performance_metrics Json?
  license_type      String?
  price             Float?
  model_file_path   String?
  created_at        DateTime @default(now())
  updated_at        DateTime @updatedAt

  user              User     @relation(fields: [user_id], references: [user_id], onDelete: Cascade)
  contributors       Model_Contributor[]
}

model Model_Contributor {
  id            Int       @id @default(autoincrement())
  user_id       Int
  model_id      Int
  status        String    @default("active")// "active" or "inactive"
  created_at    DateTime  @default(now())
  updated_at    DateTime  @updatedAt

  user          User      @relation(fields: [user_id], references: [user_id], onDelete: Cascade)
  ai_model      AI_Model  @relation(fields: [model_id], references: [model_id], onDelete: Cascade)
}